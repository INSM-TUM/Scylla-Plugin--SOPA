# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Maven Package

on:
  release:
    types: [ created ]
  push:
    branches: [ main ]

jobs:
  pat:
    name: Test PAT
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: yarn install
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  triage:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/labeler@v4
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  Release:
      runs-on: ubuntu-latest
      steps:
        # Checkout your repository
        - uses: actions/checkout@v3
          with:
            path: 'my-repo'

        # Checkout Scylla repository
        - uses: actions/checkout@v3
          with:
            repository: 'bptlab/scylla'
            path: 'scylla-repo'

        # Setup Java for building both projects
        - name: Set up JDK 17
          uses: actions/setup-java@v3
          with:
            java-version: '17'
            distribution: 'temurin'

        # Build Scylla (if necessary)
        - name: Build Scylla
          run: mvn clean install
          working-directory: ./scylla-repo

        # Now, proceed with your project's setup and build
        # Setup Node (if your project needs it)
        - name: Setup Node
          uses: actions/setup-node@v3
          with:
            node-version: 18

        # Install your project dependencies (if necessary)
        - name: Install dependencies
          run: yarn install
          working-directory: ./my-repo
          env:
            GITHUB_TOKEN: ${{ secrets.TOKEN }}

        # Build your project
        - name: Build with Maven
          run: mvn -B package --file pom.xml
          working-directory: ./my-repo

        # Publish to GitHub Packages
        - name: Publish to GitHub Packages Apache Maven
          run: mvn deploy -s $GITHUB_WORKSPACE/my-repo/settings.xml
          working-directory: ./my-repo
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}